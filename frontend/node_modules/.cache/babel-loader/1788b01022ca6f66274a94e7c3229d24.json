{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:3001/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(\"\".concat(baseUrl, \"/\").concat(id), newObject);\n  return request.then(response => response.data);\n};\n\nconst remove = (id, person) => {\n  axios.delete(\"\".concat(baseUrl, \"/\").concat(id)).catch(error => {\n    setErrorMessage(\"\".concat(person.name, \" has already been removed from the server\"));\n  });\n};\n\nexport default {\n  getAll,\n  create,\n  remove,\n  update\n};","map":{"version":3,"sources":["/Users/marijn/Desktop/fullstackopen/part2/phonebook/src/services/Service.js"],"names":["axios","baseUrl","getAll","request","get","then","response","data","create","newObject","post","update","id","put","remove","person","delete","catch","error","setErrorMessage","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,+BAAhB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAMC,OAAO,GAAGH,KAAK,CAACI,GAAN,CAAUH,OAAV,CAAhB;AACA,SAAOE,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACH,CAHD;;AAKA,MAAMC,MAAM,GAAGC,SAAS,IAAI;AACxB,QAAMN,OAAO,GAAGH,KAAK,CAACU,IAAN,CAAWT,OAAX,EAAoBQ,SAApB,CAAhB;AACA,SAAON,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACH,CAHD;;AAKA,MAAMI,MAAM,GAAG,CAACC,EAAD,EAAKH,SAAL,KAAmB;AAC9B,QAAMN,OAAO,GAAGH,KAAK,CAACa,GAAN,WAAaZ,OAAb,cAAwBW,EAAxB,GAA8BH,SAA9B,CAAhB;AACA,SAAON,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACH,CAHD;;AAKA,MAAMO,MAAM,GAAG,CAACF,EAAD,EAAKG,MAAL,KAAgB;AAC3Bf,EAAAA,KAAK,CACAgB,MADL,WACef,OADf,cAC0BW,EAD1B,GAEKK,KAFL,CAEWC,KAAK,IAAI;AACZC,IAAAA,eAAe,WAAIJ,MAAM,CAACK,IAAX,+CAAf;AACD,GAJP;AAKH,CAND;;AAQA,eAAe;AACXlB,EAAAA,MADW;AAEXM,EAAAA,MAFW;AAGXM,EAAAA,MAHW;AAIXH,EAAAA;AAJW,CAAf","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = 'http://localhost:3001/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id, person) => {\n    axios\n        .delete(`${baseUrl}/${id}`)\n        .catch(error => {\n            setErrorMessage(`${person.name} has already been removed from the server`)\n          })\n}\n\nexport default {\n    getAll,\n    create,\n    remove,\n    update    \n}"]},"metadata":{},"sourceType":"module"}
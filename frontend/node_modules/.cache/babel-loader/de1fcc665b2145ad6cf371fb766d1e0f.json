{"ast":null,"code":"import _slicedToArray from \"/Users/marijn/Desktop/fullstackopen/part2/phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/marijn/Desktop/fullstackopen/part2/phonebook/src/App.js\";\nimport React, { useState } from 'react';\n\nconst App = () => {\n  const _useState = useState([{\n    name: 'Arto Hellas'\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        persons = _useState2[0],\n        setPersons = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newName = _useState4[0],\n        setNewName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newNumber = _useState6[0],\n        setNewNumber = _useState6[1];\n\n  const addContact = event => {\n    event.preventDefault(); //check name\n\n    let originalArr = persons;\n\n    for (let person of originalArr) {\n      if (person.name.toLowerCase().includes(newName.toLowerCase())) {\n        return alert(\"\".concat(newName, \" is already added to the phonebook\"));\n      }\n    } //add name\n\n\n    const personObject = {\n      name: newName\n    };\n    setPersons(persons.concat(personObject));\n    setNewName('');\n  };\n\n  const handleChangeName = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleChangeNumber = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const numbers = () => persons.map(person => React.createElement(\"p\", {\n    key: person.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, person.name));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Phonebook\"), React.createElement(\"form\", {\n    onSubmit: addContact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"name:\", React.createElement(\"input\", {\n    value: newName,\n    onChange: handleChangeName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"number:\", React.createElement(\"input\", {\n    value: newNumber,\n    onChange: handleChangeNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"add\"))), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Numbers\"), numbers());\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/marijn/Desktop/fullstackopen/part2/phonebook/src/App.js"],"names":["React","useState","App","name","persons","setPersons","newName","setNewName","newNumber","setNewNumber","addContact","event","preventDefault","originalArr","person","toLowerCase","includes","alert","personObject","concat","handleChangeName","target","value","handleChangeNumber","numbers","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACeD,QAAQ,CAAC,CACtC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GADsC,CAAD,CADvB;AAAA;AAAA,QACRC,OADQ;AAAA,QACCC,UADD;;AAAA,qBAIgBJ,QAAQ,CAAC,EAAD,CAJxB;AAAA;AAAA,QAIRK,OAJQ;AAAA,QAICC,UAJD;;AAAA,qBAKmBN,QAAQ,CAAC,EAAD,CAL3B;AAAA;AAAA,QAKRO,SALQ;AAAA,QAKGC,YALH;;AAOhB,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN,GAD4B,CAE5B;;AACA,QAAIC,WAAW,GAAGT,OAAlB;;AACA,SAAK,IAAIU,MAAT,IAAmBD,WAAnB,EAAgC;AAC9B,UAAIC,MAAM,CAACX,IAAP,CAAYY,WAAZ,GAA0BC,QAA1B,CAAmCV,OAAO,CAACS,WAAR,EAAnC,CAAJ,EAA+D;AAC7D,eAAOE,KAAK,WAAIX,OAAJ,wCAAZ;AACD;AACF,KAR2B,CAS5B;;;AACA,UAAMY,YAAY,GAAG;AACjBf,MAAAA,IAAI,EAAEG;AADW,KAArB;AAGAD,IAAAA,UAAU,CAACD,OAAO,CAACe,MAAR,CAAeD,YAAf,CAAD,CAAV;AACAX,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAfD;;AAiBA,QAAMa,gBAAgB,GAAIT,KAAD,IAAW;AAClCJ,IAAAA,UAAU,CAACI,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAIZ,KAAD,IAAW;AACpCF,IAAAA,YAAY,CAACE,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAZ;AACD,GAFD;;AAIA,QAAME,OAAO,GAAG,MAAMpB,OAAO,CAACqB,GAAR,CAAYX,MAAM,IAAI;AAAG,IAAA,GAAG,EAAEA,MAAM,CAACX,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBW,MAAM,CAACX,IAA7B,CAAtB,CAAtB;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAM,IAAA,QAAQ,EAAEO,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE;AACE,IAAA,KAAK,EAAEJ,OADT;AAEE,IAAA,QAAQ,EAAEc,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEE;AACE,IAAA,KAAK,EAAEZ,SADT;AAEE,IAAA,QAAQ,EAAEe,kBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CARF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CAfF,CAFF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eArBF,EAsBGC,OAAO,EAtBV,CADF;AA0BD,CA5DD;;AA8DA,eAAetB,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([\n    { name: 'Arto Hellas' }\n  ]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n\n  const addContact = (event) => {\n    event.preventDefault();\n    //check name\n    let originalArr = persons\n    for (let person of originalArr) {\n      if( person.name.toLowerCase().includes(newName.toLowerCase()) ){\n        return alert(`${newName} is already added to the phonebook`)\n      } \n    }\n    //add name\n    const personObject = {\n        name: newName\n    }\n    setPersons(persons.concat(personObject));\n    setNewName('');\n  }\n\n  const handleChangeName = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleChangeNumber = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const numbers = () => persons.map(person => <p key={person.name}>{person.name}</p>)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <form onSubmit={addContact}>\n        <div>\n          name: \n          <input\n            value={newName}\n            onChange={handleChangeName}\n          />\n        </div>\n        <div>\n          number:\n          <input \n            value={newNumber}\n            onChange={handleChangeNumber}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      {numbers()}\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}
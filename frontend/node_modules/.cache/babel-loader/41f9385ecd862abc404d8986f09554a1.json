{"ast":null,"code":"import _slicedToArray from \"/Users/marijn/Desktop/fullstackopen/part2/phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/marijn/Desktop/fullstackopen/part2/phonebook/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Service from './services/Service';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        persons = _useState2[0],\n        setPersons = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newName = _useState4[0],\n        setNewName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newNumber = _useState6[0],\n        setNewNumber = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        newFilter = _useState8[0],\n        setFilter = _useState8[1];\n\n  useEffect(() => {\n    Service.getAll().then(initialPersons => setPersons(initialPersons));\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault(); //check name\n    //submit and add\n    //reject\n    //update\n  };\n\n  const addContact = event => {\n    event.preventDefault(); //check name\n\n    let originalArr = persons;\n\n    for (let person of originalArr) {\n      if (person.name.toLowerCase().includes(newName.toLowerCase())) {\n        const result = window.confirm(\"\".concat(newName, \" is already added to the phonebook, replace old number with new one?\"));\n\n        if (result) {\n          updateContact();\n        } else {\n          return;\n        }\n      } else {\n        //add name\n        const personObject = {\n          name: newName,\n          number: newNumber\n        };\n        Service.create(personObject).then(newPersons => {\n          setPersons(persons.concat(newPersons));\n          setNewName('');\n          setNewNumber('');\n        });\n      }\n    }\n  };\n\n  const updateContact = () => {\n    console.log('update');\n  };\n\n  const handleChangeName = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleChangeNumber = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const search = event => {\n    setFilter(event.target.value.toLowerCase());\n  };\n\n  const searchresults = persons.filter(person => person.name.toLowerCase().includes(newFilter));\n\n  const deletePerson = event => {\n    const deletedPerson = event.target.previousSibling.textContent.split(':')[0];\n    const result = window.confirm(\"Delete \".concat(deletedPerson, \"?\"));\n\n    if (result) {\n      const deleteId = parseInt(event.target.id);\n      Service.remove(deleteId);\n      const newList = persons.filter(person => person.id !== deleteId);\n      setPersons(newList);\n    } else {\n      return;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Phonebook\"), React.createElement(Filter, {\n    filter: newFilter,\n    change: search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Add a new\"), React.createElement(PersonForm, {\n    submit: addContact,\n    name: newName,\n    number: newNumber,\n    changeName: handleChangeName,\n    changeNumber: handleChangeNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Numbers\"), React.createElement(Persons, {\n    search: searchresults,\n    remove: deletePerson,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/marijn/Desktop/fullstackopen/part2/phonebook/src/App.js"],"names":["React","useState","useEffect","Filter","PersonForm","Persons","Service","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setFilter","getAll","then","initialPersons","handleSubmit","event","preventDefault","addContact","originalArr","person","name","toLowerCase","includes","result","window","confirm","updateContact","personObject","number","create","newPersons","concat","console","log","handleChangeName","target","value","handleChangeNumber","search","searchresults","filter","deletePerson","deletedPerson","previousSibling","textContent","split","deleteId","parseInt","id","remove","newList"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Service from './services/Service'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber] = useState('');\n  const [ newFilter, setFilter] = useState('');\n\n  useEffect(() => {\n    Service\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons))\n  }, [])\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    //check name\n\n    //submit and add\n\n    //reject\n\n    //update\n  }\n\n  const addContact = (event) => {\n    event.preventDefault();\n    //check name\n    let originalArr = persons\n    for (let person of originalArr) {\n      if( person.name.toLowerCase().includes(newName.toLowerCase()) ){\n        const result = window.confirm(`${newName} is already added to the phonebook, replace old number with new one?`)\n        if(result){\n          updateContact()\n        } else {\n          return\n        }\n      } else {\n        //add name\n        const personObject = {\n          name: newName,\n          number: newNumber\n        }\n\n        Service\n          .create(personObject)\n          .then(newPersons => {\n            setPersons(persons.concat(newPersons));\n            setNewName('');\n            setNewNumber('');\n          })\n      }\n    }\n    \n  };\n\n  const updateContact = () => {\n    console.log('update')\n  }\n\n  const handleChangeName = (event) => { setNewName(event.target.value) };\n  const handleChangeNumber = (event) => { setNewNumber(event.target.value) };\n  const search = (event) => { setFilter(event.target.value.toLowerCase()) };\n  const searchresults = persons.filter(person => person.name.toLowerCase().includes(newFilter));\n  \n  const deletePerson = (event) => {\n    const deletedPerson = event.target.previousSibling.textContent.split(':')[0]\n    const result = window.confirm(`Delete ${deletedPerson}?`)\n    if(result) {\n      const deleteId = parseInt(event.target.id)\n      Service.remove(deleteId)\n      const newList = persons.filter(person => person.id !== deleteId)\n      setPersons(newList)\n    } else {\n      return\n    }\n    \n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter \n        filter={newFilter} \n        change={search}\n      />\n\n      <h3>Add a new</h3>\n      <PersonForm \n        submit={addContact} \n        name={newName} \n        number={newNumber} \n        changeName={handleChangeName} \n        changeNumber={handleChangeNumber}\n      />\n      \n      <h3>Numbers</h3>\n      <Persons \n        search={searchresults} \n        remove={deletePerson}\n      />\n    </div>\n  );\n};\n\nexport default App"]},"metadata":{},"sourceType":"module"}